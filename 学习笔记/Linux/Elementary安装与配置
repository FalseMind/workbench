安装 Elementary OS
  准备U盘，iso文件，Universal USB Installer，做好启动盘，重启ESC键，从U盘启动
  安装参考 http://www.linuxidc.com/Linux/2016-04/130520.htm
基本软件安装
  0,sudo apt-get update
    sudo apt-get upgrade
  1,安装中文输入法
    sudo apt-get remove ibus
    sudo apt-get install fcitx fcitx-config-gtk  fcitx-googlepinyin
    sudo apt-get install fcitx-table-all #同时安装其他码表
    安装完毕，进入系统，选择设置，语言和区域，选择中国，并安装相关语言包。
    注销即可使用输入法，点击输入法按钮，删除不用的输入法，保留google
  2,安装git
    sudo apt-get install git gitk
    git config --global user.name "mantak"
    git config --global user.email "mantak.cn@gmail.com"
    git config -l  #确认一下
  3,安装nvm node
    curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash  #记得检查一下最新版本
    vim ~/.bashrc  #在最后面，添加下列两行，这样每次启动终端的时候，就可以找到node, npm
    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
    nvm ls-remote   #查看node版本
    nvm install 8.2.1 #安装某个版本
    sudo apt install vim #新版本，没有安装vim
    vim ~/.npmrc 把下面两行copy进去，这样就可以使用taobao作为npm源了
      loglevel=info
      registry=http://r.cnpmjs.org/
    npm install -g nrm #安装npm的源管理，方便切换npm源
    nrm ls #列出可用源
    nrm use cnpm #使用国内的源
    npm install -g npm-check  #安装npm包更新检查，在相关目录里运行 npm-check检查
    更新，进入项目目录， npm-check -u 安装更新，空格选择，回车安装
  4安装vim插件支持  silversearcher-ag、wmctrl、eslint、ack2
    1,sudo apt install silversearcher-ag wmctrl
    2,npm install -g eslint eslint-plugin-react babel-eslint
      which node 获得node的地址 /home/xx/node
      sudo ln -s /home/xx/node /usr/bin/node
    3,sudo apt-get install libfile-next-perl
      git clone https://github.com/petdance/ack2
      cd ack2
      perl Makefile.PL
      make && make test
      sudo make install
      cd .. && rm -rf ack2
  5,安装gvim以及插件
    sudo apt-get install python-software-properties software-properties-common
    sudo add-apt-repository ppa:jonathonf/vim
    sudo apt update
    sudo apt install vim-gtk
    git clone https://github.com/Mantak/workbench  ~/working/workbench
    ln -s ~/working/workbench/_.vimrc ~/.vimrc
    ln -s ~/working/workbench/_.agignore ~/.agignore
    ln -s ~/working/workbench/_.eslintrc ~/.eslintrc
    ln -s ~/working/workbench/javascript.snippets ~/.vim/bundle/mantak-vim/UltiSnips/
    系统设置->键盘->快捷键->自定义-> gvim -c "call Maximize_Window()"  并且按win+v快捷键，添加
    系统设置->键盘->快捷键->应用程序-> 终端         并且按win+b快捷键
    系统设置->键盘->快捷键->应用程序-> 网络浏览器   并且按win+c快捷键
    插件安装参考vimTips
  6,安装google浏览器 + SwitchOmega
    wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    sudo dpkg -i google-chrome*
    sudo apt-get -f install
    comand+space 可以看到google-chrome了，如果没有，自己手动输入google-chrome回车
    添加常用chrome插件，并且配置XX-net
      1 更改/etc/hosts文件，在文件里覆盖为后面链接里的内容。  # https://github.com/racaljk/hosts/
        然后运行: sudo /etc/init.d/networking restart
        添加switchOmega https://switchyomega.com/download.html
        进入chrome网上应用店，添加下列插件，如果仍然不能访问商店，就呆会儿再试
        Redux DevTools
        Apollo Tools
        翻译侠
        OneTab
        Gliffy
        Postman
        Eyedropper
      2 下载XX.net的稳定版，我们假设下载到/home/yourname  # https://github.com/XX-net/XX-Net/blob/master/code/default/download.md
        解压XX-Net，并且 mv XX-Net .XX-Net
        sudo apt-get install libnss3-tools  python-gtk2 #安装必要的包
        sudo ./start #可以看到服务启动了，如果暂时还不能翻墙，就等着。没有问题的。
        sudo vim /etc/rc.local   #设置开机启动，将下面一行，添加到 exit 0 前面
        sudo /home/mantak/.XX-Net/start
      3 参考文档进行配置  https://github.com/XX-net/XX-Net/wiki/How-to-use
      4 配置SwitchOmega
        点击浏览器上的SwitchOmega，选择：选项->导入导出->从备份文件恢复，选择XX-net解压包里的SwitchOmega/OmegaOptions.bak
        选择：XX-NET自动切换->立即更新情景模式
        点击浏览器上的SwitchyOmega，切换成“XX-Net自动切换”
        至此可以访问墙外内容了
      5 设置XX-net随开机后台启动
        mv XX-net-folder ~/.XX-net
        在/etc/rc.local中添加一行：
        sudo /home/username/.XX-net/code/default/xx_net.sh start
      6 恢复/etc/hosts文件
  7,安装flash，需要先翻墙
    # 54版本以上的chrome不再预安装flash。安装两种方法，先实验第一种，第二种已验证可行
    1, chrome://components/ 自己更新flash
    2, apt-cache search flashplugin #查看可以安装那些flash插件
       sudo apt-get install flashplugin-installer
       chrome://plugins/    确认flash 已经始终允许运行
       chrome://components/ 找到flash 点检查是否有更新
  8,安装解压工具
    sudo apt-get install  unar
    解压gb2312的压缩文件使用:  $unar xxx.zip
  9,安装微信
    git clone https://github.com/geeeeeeeeek/electronic-wechat.git
    cd electronic-wechat
    npm install
    mv electronic-wechat .electronic-wechat
    sudo vim /etc/rc.local   #设置开机启动，将下面一行，添加到 exit 0 前面
    cd /home/mantak/.electronic-wechat && npm start
  10,安装WPS
     访问网站下载最新deb，http://wps-community.org/download.html
     sudo dpkg -i your_download.deb
  11,安装mail
     sudo apt install geary
     启动以后
     添加帐号 -> 其他
     添加自己的帐号，还有IMAP SMTP 的服务器地址即可

编程环境搭建
  0,配置github
    ssh-keygen -t rsa -C "TODO email" #替换成自己的eimail地址，生成ssh key
    复制~/.ssh/id_rsa.pub里的内容，到 https://github.com/settings/ssh中 #创建或者重置ssh key
    ssh -T git@github.com #测试ssh key 是否设置成功
  1,安装meteor
    curl https://install.meteor.com/ | sh
    meteor npm config list  #查看meteor npm的配置
    TODO 关于代理，有各种方案，都解决不了我的问题
    https://github.com/meteor/meteor/issues/7559
    https://github.com/npm/npm/issues/8872
    https://github.com/meteor/meteor/wiki/Using-Meteor-behind-a-proxy
  2,安装robomongo
    下载并解压 https://robomongo.org/download
    找一张自己喜欢的透明背景的icon.png
    sudo mv youDownLoad /opt/robomongo
    sudo gvim /usr/share/applications/robomongo.desktop
    粘贴下面内容
      [Desktop Entry]
      Name=Robomongo
      Comment=robomongo
      Exec=/opt/robomongo/bin/robomongo
      Icon=/opt/robomongo/icon.png
      Terminal=false
      StartupNotify=true
      Type=Application
      Categories=Application;
  3,安装gitbook
    wget https://www.gitbook.com/editor/linux-64-bit/download
    sudo dpkg -i gitbook-editor-X.X.X-linux-x64.deb
    gitbook-editor #启动
  4,安装mongodb，不是给meteor用的
    sudo apt-get install mongodb
    命令
    mongo -version
    service mongodb start
    service mongodb stop
    pgrep mongo -l  #查看mongo进程
    mongo
  5,安装yarn
    npm install -g yarn
    yarn config set registry http://r.cnpmjs.org/
  6,安装代码统计
    sudo apt-get install cloc
    进入要统计的项目 cloc .

回收站位置
~/.local/share/Trash/files/
删除旧的安装包，如果有错误安装，就加-f
sudo apt-get -f autoremove
